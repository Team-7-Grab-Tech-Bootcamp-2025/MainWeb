{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "A modern RESTful API for managing your todos efficiently. This API provides comprehensive endpoints for creating, reading, updating, and deleting todo items.",
        "title": "Todo List API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support Team",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/v1/export": {
            "post": {
                "description": "Exports restaurant ratings and review counts to a CSV file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "restaurants"
                ],
                "summary": "Export restaurant ratings to CSV",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/foodtypes": {
            "get": {
                "description": "get all food types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "foodtypes"
                ],
                "summary": "Get all food types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/recalculate": {
            "post": {
                "description": "Recalculates ratings and review counts for all restaurants based on reviews and feedback labels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "restaurants"
                ],
                "summary": "Recalculate restaurant ratings",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/restaurants": {
            "get": {
                "description": "get restaurants with various filter options including location, food type, city, district, etc. Accepct limit or page (if page is specified, limit will be ignored)\nIf lat and lng are provided, it will return nearby restaurants sorted by distance.\nIf lat and lng are not provided, it will sort by rating only.\nIf count is true, it will return the total count of restaurants matching the filter criteria.\nIf neither page nor limit is specified, it will return the first 30 restaurants.\nMultiple districts can be provided as comma-separated values.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "restaurants"
                ],
                "summary": "Get restaurants by filter",
                "parameters": [
                    {
                        "type": "number",
                        "description": "Latitude",
                        "name": "lat",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Longitude",
                        "name": "lng",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Food type",
                        "name": "foodtype",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "City ID",
                        "name": "city",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "District IDs (comma-separated)",
                        "name": "district",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Return total count",
                        "name": "count",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Restaurant"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/restaurants/search": {
            "get": {
                "description": "get restaurant name suggestions based on search query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "restaurants"
                ],
                "summary": "Get autocomplete suggestions for restaurants",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit results",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Restaurant"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/restaurants/{id}": {
            "get": {
                "description": "get restaurant by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "restaurants"
                ],
                "summary": "Get a restaurant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Restaurant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Latitude",
                        "name": "lat",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Longitude",
                        "name": "lng",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.RestaurantDetail"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/restaurants/{id}/menu": {
            "get": {
                "description": "get restaurant menu by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "restaurants"
                ],
                "summary": "Get restaurant menu",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Restaurant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Dish"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/restaurants/{id}/reviews": {
            "get": {
                "description": "get restaurant reviews by ID and label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "restaurants"
                ],
                "summary": "Get restaurant reviews by label",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Restaurant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Label type (ambience, delivery, food, price, service)",
                        "name": "label",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether to count total reviews",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "If textonly = true, we get text only (ignore null reviews)",
                        "name": "textonly",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.ReviewResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "get the status of server.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Show the status of server.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Dish": {
            "description": "This struct is used to represent a dish in the system",
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the dish",
                    "type": "string"
                },
                "price": {
                    "description": "Price of the dish",
                    "type": "number"
                }
            }
        },
        "model.LabelRating": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "rating": {
                    "type": "number"
                }
            }
        },
        "model.LabelsRating": {
            "type": "object",
            "properties": {
                "ambience": {
                    "$ref": "#/definitions/model.LabelRating"
                },
                "delivery": {
                    "$ref": "#/definitions/model.LabelRating"
                },
                "food": {
                    "$ref": "#/definitions/model.LabelRating"
                },
                "price": {
                    "$ref": "#/definitions/model.LabelRating"
                },
                "service": {
                    "$ref": "#/definitions/model.LabelRating"
                }
            }
        },
        "model.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "model.Restaurant": {
            "description": "This struct is used to represent a restaurant in the system",
            "type": "object",
            "properties": {
                "address": {
                    "description": "Address of the restaurant",
                    "type": "string"
                },
                "city_id": {
                    "description": "City where the restaurant is located",
                    "type": "string"
                },
                "distance": {
                    "description": "Distance from user's location in kilometers",
                    "type": "number"
                },
                "district_id": {
                    "description": "District where the restaurant is located",
                    "type": "string"
                },
                "food_type_name": {
                    "description": "Food type name of the restaurant",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier of the restaurant",
                    "type": "string"
                },
                "latitude": {
                    "description": "Latitude and longitude coordinates of the restaurant",
                    "type": "number"
                },
                "longitude": {
                    "description": "Longitude of the restaurant",
                    "type": "number"
                },
                "name": {
                    "description": "Name of the restaurant",
                    "type": "string"
                },
                "rating": {
                    "description": "Overall rating of the restaurant",
                    "type": "number"
                },
                "review_count": {
                    "description": "Number of reviews for the restaurant",
                    "type": "integer"
                }
            }
        },
        "model.RestaurantDetail": {
            "type": "object",
            "properties": {
                "labels": {
                    "description": "Ratings for different aspects of the restaurant\nambience, delivery, food, price, and service ratings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.LabelsRating"
                        }
                    ]
                },
                "platforms": {
                    "description": "List of platforms where the restaurant is available",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "rating_platforms": {
                    "description": "Ratings for the restaurant on different platforms\nThe length of this array should match the length of the Platforms array",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "restaurant": {
                    "description": "Information about the restaurant\nThis includes the restaurant's ID, name, address, etc.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Restaurant"
                        }
                    ]
                }
            }
        },
        "model.Review": {
            "description": "This struct is used to represent a review in the system",
            "type": "object",
            "properties": {
                "feedback": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "rating_id": {
                    "type": "string"
                },
                "rating_label": {
                    "type": "number"
                },
                "review_time": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.ReviewResponse": {
            "type": "object",
            "properties": {
                "reviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Review"
                    }
                },
                "total_reviews": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Enter the token with the `Bearer: ` prefix, e.g. \"Bearer abcde12345\".",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "description": "Operations about todos",
            "name": "todos",
            "externalDocs": {
                "description": "Detailed information about todo operations",
                "url": "http://example.com/docs/todos"
            }
        },
        {
            "description": "API health check operations",
            "name": "health"
        }
    ]
}